*Trick wit sockets is you need to transfer data:#also try and secHeck
    -think 'read()'/'write()'/'send()'/'recv()'/'alloc()'/'memcpy()'...etc
*socket is repr by an int(this is the socketitdescriptor):
    -think internet protocol nums
    -as long as the 'conn()'/'accept()'/'listen()' open the sockit open()
    -can make custom sockets that comm with IBM or that berkly research non-sense #WOOPIG
    -sockets is whats really movn data around
*connection sockets:
    -implies the machine are already talkin#thinkin mo ether net in mind
*connectionless::think the internet
*so sockets need an memaddr loc bc its an program that will hold mem::its not an ip hopefully
*ip4::use 32-bits 
*ip6::use 128 bits
*types:
    -the id number(1st bit) will determine the protocol
    -characs::basically how data is store'd/ifIts sav'd/displayed/ecryp'd/etc
    -'stream'-sockets.meant to have establish conn with other machines:
        +Host-host data transfer#like putting a blog post(usrHost) to the home page(WebHost)
        +gone need a 'recursive' for to check for buffOvaFlow
        +no dup data(repeats cause an LogError)
        +TCP is one way to do it #I think 27,28 also works to i always think tcp(6) is 58(ICMPv6) is actually it 
        +you do need a firewall#*you can do it outside it*# so secHeck your own data on host-host data streams check for listener()
    -'datagrams'-sockets.something to do with headers(this is HTTP something):
        #dude Im Ip only rn maybe ipv6 HTTP can wait till I need to build headers but yo Ip with yo location is basically the the header check IG

        
