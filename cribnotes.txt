Ima Goofy sometimes. Notes just program notes and cheat sheet... welcome kiddos
*---------------------------------------------------------------------------------------------*
                            |////GO\\\\\|
Args is a command line methods. Its ment to affect the commnad line

*os.Args[0] will tell you the file path
*os.Args[1:] will be able to tell you the directories(again this affect the command line) i read the docs so I might be lying
*len(os.Args) will tell you have many has passed through the program
*idvidual slices#*args[slice:slice]*# repersent diffrent methods you can access.
*"Listener" will wait and listen for a connection(make a server a host)
*"Listen" is for local network also TCP and up dont think it works on IPs(spoiler it doesn't)
*"Dial" will call a Url(TCP/UDP/Unix/and I think IP)
*"Conn" is a client server trying to hook up wit the host(Japan gone love this LMAOOOO)

*---------------------------------------------------------------------*
                    |////HTML,CSS\\\\\|

</div> is meant to section a peice of the ... webpage(I hate webdev)
  "div" is meant to make containers  
  can be styled with class and id
"class":
    is meant as a var name or reference name so you can link it the the css or watever the kids use
"input":
    this tells a certain spot where user input data
#come with hella input types im importing
#*
<input type="button">
<input type="checkbox">
<input type="color">
<input type="date">
<input type="datetime-local">
<input type="email">
<input type="file">
<input type="hidden">
<input type="image">
<input type="month">
<input type="number">
<input type="password">
<input type="radio">
<input type="range">
<input type="reset">
<input type="search">
<input type="submit">
<input type="tel">
<input type="text"> (default value)
<input type="time">
<input type="url">
<input type="week">
*#

static:
    Default value. Elements render in order, as they appear in the document flow	
absolute:
    The element is positioned relative to its first positioned (not static) ancestor element	
fixed:
    The element is positioned relative to the browser window	
relative: 
    The element is positioned relative to its normal position, so "left:20px" adds 20 pixels to the element's LEFT position	
sticky:
    The element is positioned based on the user's scroll position
A sticky
     element toggles between relative and fixed, depending on the scroll position. It is positioned relative until a given offset position is met in the viewport - then it "sticks" in place (like position:fixed).

Note: Not supported in IE/Edge 15 or earlier. Supported in Safari from version 6.1 with a -webkit- prefix.	
initial:
    Sets this property to its default value. Read about initial	
inherit: 
    Inherits this property from its parent element

***********************************Sockets*******DATA*****************************************************************

sockets:
    end point btw machiens for comms
    

ICMP Protocol means "Internet Control Message Protocol" its like a ruleset for communications(prolly sent wordbyte instead of raw data):
    1 -> IP
    58 -> IPv6

packets:
    Packets are broken up message that will be recombined by the reciver machine:
        data could be sent over diffrent modems:
            think of how videos have audio, pictures, color, rendering, etc...#*Explains buffering*# these forms of data would need diffrent means of reaching the client machine
    packets works bc CPUS fuckin sucks. Think about it One instruction at a time imagine if the video was a Gig,
    you would have to download the video and nothing else#*Your clock would have to stop Phone/PC couldn't render videos.    Nothing but process the download not even update you on the download*#,
    breaking the message up would help aid the threading process
    "Packet Switching" is when multiple machines are sending data to one reciver(Host,Client,Database#*A freakin data base need packet switching. How can I join the pipe line covertly... the ethernets are in the air now...*#)
    "header":
        this a label of sorts with an Ip, address machine info, destination etc also Sequenctial#*nospellcheck*# order
        so packets usally have multple headers:
            it gets called on by the internet protocols
    "IP" does something with routing:
        it reads the Memory address(may notbe Tech right but google.com is 142.250.113.113. and thats a fuckin memory address LMAOO ) and ties the memory address with an internet protocol. #im statring to see doors

